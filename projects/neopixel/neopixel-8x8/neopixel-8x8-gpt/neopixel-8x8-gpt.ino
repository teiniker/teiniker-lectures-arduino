#include <Adafruit_NeoPixel.h>

#define PIN 2	 // input pin Neopixel is attached to

#define NUMPIXELS 64 // number of neopixels in strip

Adafruit_NeoPixel pixels = Adafruit_NeoPixel(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800);

void setup() 
{  
  pixels.begin();	// Initialize the NeoPixel library.
  pixels.setBrightness(40);
}

// The following code is generated by ChatGPT 

void loop() {
  uint32_t colors[] = {pixels.Color(255, 0, 0), pixels.Color(0, 255, 0), pixels.Color(0, 0, 255), pixels.Color(255, 255, 0)}; // Red, Green, Blue, Yellow
  int colorIndex = 0;

  // The starting point is to illuminate the central 2x2 square, which is slightly offset from the exact center.
  for(int layer = 0; layer < 4; layer++) { // There can be up to 4 layers in an 8x8 matrix starting from the center
    drawLayer(layer, colors[colorIndex % 4]); // Draw layer with the current color
    pixels.show(); // Update the display
    delay(250); // Wait for half a second
    clearPixels(); // Clear the matrix before drawing the next layer
    colorIndex++; // Move to the next color
  }
}

void drawLayer(int layer, uint32_t color) {
  // Calculate the coordinates of the top left corner of the layer
  int startX = 3 - layer;
  int startY = 3 - layer;
  int endX = 4 + layer;
  int endY = 4 + layer;

  // Draw the top and bottom sides of the square
  for(int x = startX; x <= endX; x++) {
    pixels.setPixelColor((startY * 8) + x, color);
    pixels.setPixelColor((endY * 8) + x, color);
  }
  
  // Draw the left and right sides of the square
  for(int y = startY; y <= endY; y++) {
    pixels.setPixelColor((y * 8) + startX, color);
    pixels.setPixelColor((y * 8) + endX, color);
  }
}

void clearPixels() {
  for(int i = 0; i < NUMPIXELS; i++) {
    pixels.setPixelColor(i, pixels.Color(0, 0, 0)); // Turn off the LED
  }
  pixels.show();
}
